package com.yeespec.microscope.utils;import android.content.Context;import android.content.SharedPreferences;import android.net.NetworkInfo;import com.yeespec.microscope.master.activity.MasterActivity;import com.yeespec.microscope.master.application.BaseApplication;import java.util.HashSet;import java.util.Set;/** * Created by Mr.Wen on 2017/2/22. */public class ConstantUtil {    //配置    public static boolean unDisplay=true;//开启手机端链接wifi ligth smart need setting true;    public static String rockerState="no";//是否开启摇杆 "yes"开启 "no"关闭  默认关闭 no    public static boolean LONZA=true;// light smart 在设置按键中使用  对焦电机改为 03  light smart还需修改uvccamera中 摄像头分辨率及类型    public static boolean IS_SELF_CHECK = true;//是否开启自检  false 自检按键被屏蔽    public static boolean TimerModel = false;//有时间模块 lonza没有 为 false    public static int  ModorType = 1;//电机类型 1 为有细分 1/4  暂无用到    public static boolean IS_DEBUG=false;//是否为试用版    public static long StartLongSeconds=60*60*24*60;//试用版可使用时间/seconds    public static boolean isV820Pad = false;//是否是V820平板 此配置关系到图片标尺的位置及开机跳转桌面    public static boolean AUTO_CAPUTER_CLOSEUVC = false;//自动拍照是否关闭摄像头    public static int tranlateX =0;//图片X轴像素默认偏移量    public static int tranlateY =10;//图片Y轴像素默认偏移量    public static String  ConvergenceNumber = "50";    public static int MAXGAMMA=8500;//最大偏移步数 ,默认    public static String USB_Path = null;//USB 挂载路径    public static final int OBJECTIVE_VALUE_A = 5;    //值10物镜A 的倍数 :    public static final int OBJECTIVE_VALUE_B = 20;   //值20物镜B 的倍数 :    public static final int OBJECTIVE_VALUE_C = 20;   //值20物镜C 的倍数 :    public static int[] OBJECTIVES = {OBJECTIVE_VALUE_A, OBJECTIVE_VALUE_B};    public static String intevalAndPercentage;//记录时间间隔及生长率字符串    public static boolean isStartDetection = false;//是否开启检测wifi direct    public static boolean isEnbleListening = false;//远程监听是否已经开启    public static String remoteUserName ;//远程登录名称    public static String remotePassword ;//远程登录密码    public  static  boolean synchronousBright = false;//是否开启亮自动跟踪    public static boolean  is_recoding = false;//是否在录制视频    public  static  boolean isRestart = false;//是否重启的应用    public static boolean  isfirst_run = false;//    public static int  filenumber = 0;//文件个数    public static Set<String> autoPhotoChecks = new HashSet<>();//自动拍照选择激发块    public static int  processBarAutoPhoto = 0;//自动拍照进度/张    public static int  autoPhotoCount = 0;//自动拍照总数/张    public static String  stopAutoPhotoStr = "";//自动拍照停止时间    public static boolean isExport = false;//是否正在导出    public static boolean isSaveMovis = false;//是否正在保存视频    public static boolean isAllowOperation = true;//是否允许对摄像头操作    public static boolean isUVCClose = false;//摄像头是否打开    public static int Level=0;//电量百分数    public static String SaturationString="BlackLight";//记录当前选择激发块名称    public static int CARRIER_STEP=500;//载玻片偏移步数    public static int PETRIDISH_STEP=500;//培养皿偏移不是    public static int PLATE_STEP=500;//培养板偏移步数    public static int MOVE_SPEED=3;//偏移速度    public static int M_GAMMA=100;//增强边缘设定伐值    public static int LIGHTSCOUNT =4;//激发块数量    /**     * 1 代表白灯  2 代表蓝灯 3 代表绿灯 4 代表紫灯   1,2,3,4代表组合     */    public static String LIGHTTYPE = "1,2,3,4";//激发块类型    public static String OBJECTSTRING = "5,20";//    public static  int CHECK_AUTOFOCUS =1;//自动对焦选择按键 1载波片 2 培养皿 3 培养板    public static boolean isSelefCheck=false;    public static boolean isStatScreenScale=false;//是否开启屏幕分割线    public static String DIS_CONNECT_BLUE_ACTION="dis_connecct_blue_action";//蓝牙广播action值    public static String CONNECT_BLUE_NAME="";//连接蓝牙名称    public static boolean IsUVCServiceDisConnect=false;//用来标记UVCservice是否被销毁    //标记UVCService状态 1为连接中  2为被销毁状态 3 重新正在重启    public static int UVCServiceConnectStion=1;    private static Context mContext;    //public static  int UARTGAMMA =0;//记录串口的gamma值    public static String currentCaptureName="";    //自动拍照Action    //public final static String AOTOCOMPER_BROADCAST_ACTION="com.aotocomper.broadcast.action";    //自动拍照保存文件名    public final static String CHECKBOXSTATE ="checkboxstate";    public final static String CHECKBOXS ="checkboxs";    public static boolean isAutofocus=false;//是否拍照跟焦    public static boolean isStartAutofocus=false;//是否正在自动对焦    public static boolean isAutoFocusFinish=true;//是否自动对焦完成    public static boolean isSynthetic =false;//自动拍照是否合成照片   // public static int AutoPhotoState=1;//拍照状态 1 为拍照  2 准备自动拍照 3 正在自动拍照    public static boolean isAutoPhotoFinish= true;//自动拍照是否完成    //用户名保存文件名    public final static String USEUSERNAMES_DIR="useusernames_dir2";    public final static String USEUSERNAMES="useusernames";    //当前用户名保存文件名    public static String CURRENT_USER_SHAR_DIR="current_user_shar_dir";    public static String CURRENT__USER_SHAR="current_user_shar";    public static String CURRENT_USER="";    public  static String EXPORT_USER_NAME="";    public static String FLAG = "0";    //public static String RESTART_SERVER_ACTION="com.yeespec.restartserver";    public static String EXCEPTION_ACTION_NAME = "com.process.exception.broad";    public ConstantUtil(MasterActivity masterActivity) {        mContext =masterActivity;    }    public void ConstantUtil(){    }    public void ConstantUtil(Context context){        this.mContext = context;    }    //保存当前用户名    public static void savaCurrentUser(Context context,String currentUserName){        if(currentUserName==null){            return;        }        SharedPreferences sharedPreferences = context.getSharedPreferences(ConstantUtil.CURRENT_USER_SHAR_DIR,0);        SharedPreferences.Editor editor = sharedPreferences.edit();        editor.clear();        editor.putString(ConstantUtil.CURRENT__USER_SHAR,currentUserName);        editor.commit();        //记录当前用户名        ConstantUtil.CURRENT_USER = currentUserName.toString().trim();    }    //获取当前用户名    public static String  getCurrentUserName(Context context){        if(!ConstantUtil.CURRENT_USER.trim().equals("")){            return ConstantUtil.CURRENT_USER;        }else {            SharedPreferences sharedPreferences = context.getSharedPreferences(ConstantUtil.CURRENT_USER_SHAR_DIR, 0);            String currentName = sharedPreferences.getString(ConstantUtil.CURRENT__USER_SHAR, null);            return currentName;        }    }    public static long lastClickTime;    public static boolean isFastDoubleClick() {        long time = System.currentTimeMillis();        long timeD = time - lastClickTime;        if ( 0 < timeD && timeD < 800) {            return true;        }        lastClickTime = time;        return false;    }    public static String getStateStr(){        int saturation = BaseApplication.getInstance().getSaturation();        int brightness = BaseApplication.getInstance().getBrightness();        int contrast = BaseApplication.getInstance().getContrast();        int gamma = BaseApplication.getInstance().getGamma();        int gain = BaseApplication.getInstance().getGain();        String currentReColorString = BaseApplication.getInstance().getCurrentReColorString();        String str = "saturation="+saturation+" brightness="+brightness+" contrast="+contrast+" gamma="+gamma+" gain="+gain+" currentReColorString="+currentReColorString;        return str;    }}